name: build-v8-windows
on: [workflow_dispatch]
jobs:
  build-v8:
    runs-on: windows-latest
    steps:
      - name: Cache
        id: cache
        uses: actions/cache@v3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: |
            C:\\depot_tools
            v8
          # An explicit key for restoring and saving the cache
          key: windows
      - name: install depot_tools
        if: steps.cache.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          $client = new-object System.Net.WebClient; $client.DownloadFile("https://storage.googleapis.com/chrome-infra/depot_tools.zip","C:\depot_tools.zip")
          mkdir "C:\depot_tools"; tar -xf "C:\depot_tools.zip" -C "C:\depot_tools"
          echo "C:\depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo DEPOT_TOOLS_WIN_TOOLCHAIN=0 "vs2019_install=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: add depot_tools to path
        shell: pwsh
        run: |
          echo "C:\depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo DEPOT_TOOLS_WIN_TOOLCHAIN=0 "vs2019_install=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: setup gclient
        shell: cmd
        run: gclient
      - name: build v8
        shell: cmd
        run: go run .
      - uses: actions/upload-artifact@v3
        with:
          name: windows-headers-and-libraries
          path: |
            v8/include/
            windows_amd64/
